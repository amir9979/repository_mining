from metrics.version_metrics_data import DataBuilder
from metrics.version_metrics_name import DataName


class Builders:
    @staticmethod
    def get_designite_builder(project, version):
        db = DataBuilder(project, version)
        db.append(DataName.ImperativeAbstraction)
        db.append(DataName.MultifacetedAbstraction)
        db.append(DataName.UnnecessaryAbstraction)
        db.append(DataName.UnutilizedAbstraction)
        db.append(DataName.DeficientEncapsulation)
        db.append(DataName.UnexploitedEncapsulation)
        db.append(DataName.BrokenModularization)
        db.append(DataName.Cyclic_DependentModularization)
        db.append(DataName.InsufficientModularization)
        db.append(DataName.Hub_likeModularization)
        db.append(DataName.BrokenHierarchy)
        db.append(DataName.CyclicHierarchy)
        db.append(DataName.DeepHierarchy)
        db.append(DataName.MissingHierarchy)
        db.append(DataName.MultipathHierarchy)
        db.append(DataName.RebelliousHierarchy)
        db.append(DataName.WideHierarchy)
        db.append(DataName.Bugged)
        return db

    @staticmethod
    def get_fowler_builder(project, version):
        db = DataBuilder(project, version)
        db.append(DataName.GodClass)
        db.append(DataName.ClassDataShouldBePrivate)
        db.append(DataName.ComplexClass)
        db.append(DataName.LazyClass)
        db.append(DataName.RefusedBequest)
        db.append(DataName.SpaghettiCode)
        db.append(DataName.SpeculativeGenerality)
        db.append(DataName.DataClass)
        db.append(DataName.BrainClass)
        db.append(DataName.LargeClass)
        db.append(DataName.SwissArmyKnife)
        db.append(DataName.AntiSingleton)
        db.append(DataName.FeatureEnvy)
        db.append(DataName.LongMethod_Organic)
        db.append(DataName.LongParameterList_Organic)
        db.append(DataName.MessageChain)
        db.append(DataName.DispersedCoupling)
        db.append(DataName.IntensiveCoupling)
        db.append(DataName.ShotgunSurgery)
        db.append(DataName.BrainMethod)
        db.append(DataName.Bugged)
        return db

    @staticmethod
    def get_traditional_builder(project, version):
        db = DataBuilder(project, version)
        db.append(DataName.CBO)
        db.append(DataName.WMC_CK)
        db.append(DataName.RFC)
        db.append(DataName.LOCMethod_CK)
        db.append(DataName.Returns)
        db.append(DataName.NumberOfVariables)
        db.append(DataName.NumberOfParameters_CK)
        db.append(DataName.NumberOfLoops)
        db.append(DataName.NumberOfComparisons)
        db.append(DataName.NumberOfTryCatch)
        db.append(DataName.NumberOfParenthesizedExps)
        db.append(DataName.NumberOfStringLiterals)
        db.append(DataName.NumberOfNumbers)
        db.append(DataName.NumberOfAssignments)
        db.append(DataName.NumberOfMathOperations)
        db.append(DataName.MaxNumberOfNestedBlocks)
        db.append(DataName.NumberOfAnonymousClasses)
        db.append(DataName.NumberOfInnerClasses)
        db.append(DataName.NumberOfLambdas)
        db.append(DataName.NumberOfUniqueWords)
        db.append(DataName.NumberOfModifiers)
        db.append(DataName.NumberOfLogStatements)
        db.append(DataName.NumberOfFields)
        db.append(DataName.NumberOfPublicFields)
        db.append(DataName.NumberOfMethods_Designite)
        db.append(DataName.NumberOfPublicMethods_Designite)
        db.append(DataName.NumberOfChildren)
        db.append(DataName.DepthOfInheritance)
        db.append(DataName.LOCClass)
        db.append(DataName.LCOM)
        db.append(DataName.FANIN)
        db.append(DataName.FANOUT)
        db.append(DataName.TotalNumberOfOperators)
        db.append(DataName.NumberOfDistinctOperators)
        db.append(DataName.TotalNumberOfOperands)
        db.append(DataName.NumberOfDistinctOperands)
        db.append(DataName.Length)
        db.append(DataName.Vocabulary)
        db.append(DataName.Volume)
        db.append(DataName.Difficulty)
        db.append(DataName.Effort)
        db.append(DataName.NCSSForThisFile)
        db.append(DataName.NestedIfElseDepth)
        db.append(DataName.BooleanExpressionComplexity)
        db.append(DataName.CyclomaticComplexity)
        db.append(DataName.NCSSForThisMethod)
        db.append(DataName.NPathComplexity)
        db.append(DataName.ThrowsCount)
        db.append(DataName.NCSSForThisClass)
        db.append(DataName.ExecutableStatementCount)
        db.append(DataName.MethodLength)
        db.append(DataName.FileLength)
        db.append(DataName.NumberOfMethods_Checkstyle)
        db.append(DataName.NumberOfPublicMethods_Checkstyle)
        db.append(DataName.ClassFanOutComplexity)
        db.append(DataName.ClassDataAbstractionCoupling)
        db.append(DataName.Bugged)
        return db

    @staticmethod
    def get_designite_fowler_builder(project, version):
        db = DataBuilder(project, version)
        db.append(DataName.GodClass)
        db.append(DataName.ClassDataShouldBePrivate)
        db.append(DataName.ComplexClass)
        db.append(DataName.LazyClass)
        db.append(DataName.RefusedBequest)
        db.append(DataName.SpaghettiCode)
        db.append(DataName.SpeculativeGenerality)
        db.append(DataName.DataClass)
        db.append(DataName.BrainClass)
        db.append(DataName.LargeClass)
        db.append(DataName.SwissArmyKnife)
        db.append(DataName.AntiSingleton)
        db.append(DataName.FeatureEnvy)
        db.append(DataName.LongMethod_Organic)
        db.append(DataName.LongParameterList_Organic)
        db.append(DataName.MessageChain)
        db.append(DataName.DispersedCoupling)
        db.append(DataName.IntensiveCoupling)
        db.append(DataName.ShotgunSurgery)
        db.append(DataName.BrainMethod)
        db.append(DataName.ImperativeAbstraction)
        db.append(DataName.MultifacetedAbstraction)
        db.append(DataName.UnnecessaryAbstraction)
        db.append(DataName.UnutilizedAbstraction)
        db.append(DataName.DeficientEncapsulation)
        db.append(DataName.UnexploitedEncapsulation)
        db.append(DataName.BrokenModularization)
        db.append(DataName.Cyclic_DependentModularization)
        db.append(DataName.InsufficientModularization)
        db.append(DataName.Hub_likeModularization)
        db.append(DataName.BrokenHierarchy)
        db.append(DataName.CyclicHierarchy)
        db.append(DataName.DeepHierarchy)
        db.append(DataName.MissingHierarchy)
        db.append(DataName.MultipathHierarchy)
        db.append(DataName.RebelliousHierarchy)
        db.append(DataName.WideHierarchy)
        db.append(DataName.Bugged)
        return db

    @staticmethod
    def get_designite_traditional_builder(project, version):
        db = DataBuilder(project, version)
        db.append(DataName.ImperativeAbstraction)
        db.append(DataName.MultifacetedAbstraction)
        db.append(DataName.UnnecessaryAbstraction)
        db.append(DataName.UnutilizedAbstraction)
        db.append(DataName.DeficientEncapsulation)
        db.append(DataName.UnexploitedEncapsulation)
        db.append(DataName.BrokenModularization)
        db.append(DataName.Cyclic_DependentModularization)
        db.append(DataName.InsufficientModularization)
        db.append(DataName.Hub_likeModularization)
        db.append(DataName.BrokenHierarchy)
        db.append(DataName.CyclicHierarchy)
        db.append(DataName.DeepHierarchy)
        db.append(DataName.MissingHierarchy)
        db.append(DataName.MultipathHierarchy)
        db.append(DataName.RebelliousHierarchy)
        db.append(DataName.WideHierarchy)
        db.append(DataName.CBO)
        db.append(DataName.WMC_CK)
        db.append(DataName.RFC)
        db.append(DataName.LOCMethod_CK)
        db.append(DataName.Returns)
        db.append(DataName.NumberOfVariables)
        db.append(DataName.NumberOfParameters_CK)
        db.append(DataName.NumberOfLoops)
        db.append(DataName.NumberOfComparisons)
        db.append(DataName.NumberOfTryCatch)
        db.append(DataName.NumberOfParenthesizedExps)
        db.append(DataName.NumberOfStringLiterals)
        db.append(DataName.NumberOfNumbers)
        db.append(DataName.NumberOfAssignments)
        db.append(DataName.NumberOfMathOperations)
        db.append(DataName.MaxNumberOfNestedBlocks)
        db.append(DataName.NumberOfAnonymousClasses)
        db.append(DataName.NumberOfInnerClasses)
        db.append(DataName.NumberOfLambdas)
        db.append(DataName.NumberOfUniqueWords)
        db.append(DataName.NumberOfModifiers)
        db.append(DataName.NumberOfLogStatements)
        db.append(DataName.NumberOfFields)
        db.append(DataName.NumberOfPublicFields)
        db.append(DataName.NumberOfMethods_Designite)
        db.append(DataName.NumberOfPublicMethods_Designite)
        db.append(DataName.NumberOfChildren)
        db.append(DataName.DepthOfInheritance)
        db.append(DataName.LOCClass)
        db.append(DataName.LCOM)
        db.append(DataName.FANIN)
        db.append(DataName.FANOUT)
        db.append(DataName.TotalNumberOfOperators)
        db.append(DataName.NumberOfDistinctOperators)
        db.append(DataName.TotalNumberOfOperands)
        db.append(DataName.NumberOfDistinctOperands)
        db.append(DataName.Length)
        db.append(DataName.Vocabulary)
        db.append(DataName.Volume)
        db.append(DataName.Difficulty)
        db.append(DataName.Effort)
        db.append(DataName.NCSSForThisFile)
        db.append(DataName.NestedIfElseDepth)
        db.append(DataName.BooleanExpressionComplexity)
        db.append(DataName.CyclomaticComplexity)
        db.append(DataName.NCSSForThisMethod)
        db.append(DataName.NPathComplexity)
        db.append(DataName.ThrowsCount)
        db.append(DataName.NCSSForThisClass)
        db.append(DataName.ExecutableStatementCount)
        db.append(DataName.MethodLength)
        db.append(DataName.FileLength)
        db.append(DataName.NumberOfMethods_Checkstyle)
        db.append(DataName.NumberOfPublicMethods_Checkstyle)
        db.append(DataName.ClassFanOutComplexity)
        db.append(DataName.ClassDataAbstractionCoupling)
        db.append(DataName.Bugged)
        return db

    @staticmethod
    def get_fowler_traditional_builder(project, version):
        db = DataBuilder(project, version)
        db.append(DataName.GodClass)
        db.append(DataName.ClassDataShouldBePrivate)
        db.append(DataName.ComplexClass)
        db.append(DataName.LazyClass)
        db.append(DataName.RefusedBequest)
        db.append(DataName.SpaghettiCode)
        db.append(DataName.SpeculativeGenerality)
        db.append(DataName.DataClass)
        db.append(DataName.BrainClass)
        db.append(DataName.LargeClass)
        db.append(DataName.SwissArmyKnife)
        db.append(DataName.AntiSingleton)
        db.append(DataName.FeatureEnvy)
        db.append(DataName.LongMethod_Organic)
        db.append(DataName.LongParameterList_Organic)
        db.append(DataName.MessageChain)
        db.append(DataName.DispersedCoupling)
        db.append(DataName.IntensiveCoupling)
        db.append(DataName.ShotgunSurgery)
        db.append(DataName.BrainMethod)
        db.append(DataName.CBO)
        db.append(DataName.WMC_CK)
        db.append(DataName.RFC)
        db.append(DataName.LOCMethod_CK)
        db.append(DataName.Returns)
        db.append(DataName.NumberOfVariables)
        db.append(DataName.NumberOfParameters_CK)
        db.append(DataName.NumberOfLoops)
        db.append(DataName.NumberOfComparisons)
        db.append(DataName.NumberOfTryCatch)
        db.append(DataName.NumberOfParenthesizedExps)
        db.append(DataName.NumberOfStringLiterals)
        db.append(DataName.NumberOfNumbers)
        db.append(DataName.NumberOfAssignments)
        db.append(DataName.NumberOfMathOperations)
        db.append(DataName.MaxNumberOfNestedBlocks)
        db.append(DataName.NumberOfAnonymousClasses)
        db.append(DataName.NumberOfInnerClasses)
        db.append(DataName.NumberOfLambdas)
        db.append(DataName.NumberOfUniqueWords)
        db.append(DataName.NumberOfModifiers)
        db.append(DataName.NumberOfLogStatements)
        db.append(DataName.NumberOfFields)
        db.append(DataName.NumberOfPublicFields)
        db.append(DataName.NumberOfMethods_Designite)
        db.append(DataName.NumberOfPublicMethods_Designite)
        db.append(DataName.NumberOfChildren)
        db.append(DataName.DepthOfInheritance)
        db.append(DataName.LOCClass)
        db.append(DataName.LCOM)
        db.append(DataName.FANIN)
        db.append(DataName.FANOUT)
        db.append(DataName.TotalNumberOfOperators)
        db.append(DataName.NumberOfDistinctOperators)
        db.append(DataName.TotalNumberOfOperands)
        db.append(DataName.NumberOfDistinctOperands)
        db.append(DataName.Length)
        db.append(DataName.Vocabulary)
        db.append(DataName.Volume)
        db.append(DataName.Difficulty)
        db.append(DataName.Effort)
        db.append(DataName.NCSSForThisFile)
        db.append(DataName.NestedIfElseDepth)
        db.append(DataName.BooleanExpressionComplexity)
        db.append(DataName.CyclomaticComplexity)
        db.append(DataName.NCSSForThisMethod)
        db.append(DataName.NPathComplexity)
        db.append(DataName.ThrowsCount)
        db.append(DataName.NCSSForThisClass)
        db.append(DataName.ExecutableStatementCount)
        db.append(DataName.MethodLength)
        db.append(DataName.FileLength)
        db.append(DataName.NumberOfMethods_Checkstyle)
        db.append(DataName.NumberOfPublicMethods_Checkstyle)
        db.append(DataName.ClassFanOutComplexity)
        db.append(DataName.ClassDataAbstractionCoupling)
        db.append(DataName.Bugged)
        return db

    @staticmethod
    def get_designite_fowler_traditional_builder(project, version):
        db = DataBuilder(project, version)
        db.append(DataName.ImperativeAbstraction)
        db.append(DataName.MultifacetedAbstraction)
        db.append(DataName.UnnecessaryAbstraction)
        db.append(DataName.UnutilizedAbstraction)
        db.append(DataName.DeficientEncapsulation)
        db.append(DataName.UnexploitedEncapsulation)
        db.append(DataName.BrokenModularization)
        db.append(DataName.Cyclic_DependentModularization)
        db.append(DataName.InsufficientModularization)
        db.append(DataName.Hub_likeModularization)
        db.append(DataName.BrokenHierarchy)
        db.append(DataName.CyclicHierarchy)
        db.append(DataName.DeepHierarchy)
        db.append(DataName.MissingHierarchy)
        db.append(DataName.MultipathHierarchy)
        db.append(DataName.RebelliousHierarchy)
        db.append(DataName.WideHierarchy)
        db.append(DataName.GodClass)
        db.append(DataName.ClassDataShouldBePrivate)
        db.append(DataName.ComplexClass)
        db.append(DataName.LazyClass)
        db.append(DataName.RefusedBequest)
        db.append(DataName.SpaghettiCode)
        db.append(DataName.SpeculativeGenerality)
        db.append(DataName.DataClass)
        db.append(DataName.BrainClass)
        db.append(DataName.LargeClass)
        db.append(DataName.SwissArmyKnife)
        db.append(DataName.AntiSingleton)
        db.append(DataName.FeatureEnvy)
        db.append(DataName.LongMethod_Organic)
        db.append(DataName.LongParameterList_Organic)
        db.append(DataName.MessageChain)
        db.append(DataName.DispersedCoupling)
        db.append(DataName.IntensiveCoupling)
        db.append(DataName.ShotgunSurgery)
        db.append(DataName.BrainMethod)
        db.append(DataName.CBO)
        db.append(DataName.WMC_CK)
        db.append(DataName.RFC)
        db.append(DataName.LOCMethod_CK)
        db.append(DataName.Returns)
        db.append(DataName.NumberOfVariables)
        db.append(DataName.NumberOfParameters_CK)
        db.append(DataName.NumberOfLoops)
        db.append(DataName.NumberOfComparisons)
        db.append(DataName.NumberOfTryCatch)
        db.append(DataName.NumberOfParenthesizedExps)
        db.append(DataName.NumberOfStringLiterals)
        db.append(DataName.NumberOfNumbers)
        db.append(DataName.NumberOfAssignments)
        db.append(DataName.NumberOfMathOperations)
        db.append(DataName.MaxNumberOfNestedBlocks)
        db.append(DataName.NumberOfAnonymousClasses)
        db.append(DataName.NumberOfInnerClasses)
        db.append(DataName.NumberOfLambdas)
        db.append(DataName.NumberOfUniqueWords)
        db.append(DataName.NumberOfModifiers)
        db.append(DataName.NumberOfLogStatements)
        db.append(DataName.NumberOfFields)
        db.append(DataName.NumberOfPublicFields)
        db.append(DataName.NumberOfMethods_Designite)
        db.append(DataName.NumberOfPublicMethods_Designite)
        db.append(DataName.NumberOfChildren)
        db.append(DataName.DepthOfInheritance)
        db.append(DataName.LOCClass)
        db.append(DataName.LCOM)
        db.append(DataName.FANIN)
        db.append(DataName.FANOUT)
        db.append(DataName.TotalNumberOfOperators)
        db.append(DataName.NumberOfDistinctOperators)
        db.append(DataName.TotalNumberOfOperands)
        db.append(DataName.NumberOfDistinctOperands)
        db.append(DataName.Length)
        db.append(DataName.Vocabulary)
        db.append(DataName.Volume)
        db.append(DataName.Difficulty)
        db.append(DataName.Effort)
        db.append(DataName.NCSSForThisFile)
        db.append(DataName.NestedIfElseDepth)
        db.append(DataName.BooleanExpressionComplexity)
        db.append(DataName.CyclomaticComplexity)
        db.append(DataName.NCSSForThisMethod)
        db.append(DataName.NPathComplexity)
        db.append(DataName.ThrowsCount)
        db.append(DataName.NCSSForThisClass)
        db.append(DataName.ExecutableStatementCount)
        db.append(DataName.MethodLength)
        db.append(DataName.FileLength)
        db.append(DataName.NumberOfMethods_Checkstyle)
        db.append(DataName.NumberOfPublicMethods_Checkstyle)
        db.append(DataName.ClassFanOutComplexity)
        db.append(DataName.ClassDataAbstractionCoupling)
        db.append(DataName.Bugged)
        return db
